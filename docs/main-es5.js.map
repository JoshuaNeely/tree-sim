{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/build-tree-data.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","numberOfTrees","bufferX","bufferY","gridSizeSquares","ctx","canvas","nativeElement","getContext","fillStyle","canvasWidth","width","canvasHeight","redraw","clearCanvas","returnData","buildTreeData","drawSquares","treeData","message","x","y","clearRect","height","filled","fillRect","strokeRect","squareData","squareWidth","squareHeight","isFilled","drawSquare","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","MAX_ATTEMPTS","gridSize","buffer","numTrees","attemptNumber","remainingCoordinates","push","pickedCoordinates","i","remainingIndexs","length","selectionIndex","randomInt","selection","excludeCoordinates","coordinatesToGrid","pickX","pickY","availableCoordinates","filter","coord","shouldExclude","startX","startY","endX","endY","coordinates","min","max","Math","floor","random","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {\n  Component,\n  ViewChild,\n  ElementRef,\n  OnInit,\n} from '@angular/core';\n\nimport { buildTreeData, ReturnData } from './build-tree-data';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  numberOfTrees: number = 10;\n  bufferX: number = 2;\n  bufferY: number = 2;\n  gridSizeSquares: number = 16;\n\n  canvasWidth: number;\n  canvasHeight: number;\n\n  // feedback to the user on the algorithm\n  message: string;\n\n  private ctx: CanvasRenderingContext2D;\n\n  @ViewChild('canvas', { static: true })\n  canvas: ElementRef<HTMLCanvasElement>;  \n  \n\n  ngOnInit(): void {\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    this.ctx.fillStyle = 'black';\n\n    this.canvasWidth = this.ctx.canvas.width;\n    this.canvasHeight= this.ctx.canvas.width;\n\n    this.redraw();\n  }\n\n  redraw(): void {\n    this.clearCanvas();\n    const returnData = this.buildTreeData();\n    this.drawSquares(returnData.treeData);\n    this.message = returnData.message;\n  }\n\n  private buildTreeData(): ReturnData {\n    return buildTreeData(this.gridSizeSquares, {x: this.bufferX, y: this.bufferY}, this.numberOfTrees);\n  }\n\n  private clearCanvas(): void {\n    this.ctx.clearRect(0,0, this.canvasWidth, this.canvasHeight);\n  }\n\n  private drawSquare(x: number, y: number, width: number, height: number, filled: boolean) {\n    if (filled) {\n      this.ctx.fillRect(x, y, width, height);\n    } else {\n      this.ctx.strokeRect(x, y, width, height);\n    }\n  }\n\n  private drawSquares(squareData: number[][]) {\n    const squareWidth= this.canvasWidth / this.gridSizeSquares;\n    const squareHeight = this.canvasWidth / this.gridSizeSquares;\n\n    for (let x=0; x<this.gridSizeSquares; x++) {\n      for (let y=0; y<this.gridSizeSquares; y++) {\n        const isFilled: boolean = squareData[x][y] === 1;\n        \n        this.drawSquare(\n          x*squareWidth,\n          y*squareHeight,\n          squareWidth,\n          squareHeight,\n          isFilled,\n        );\n      }\n    }\n  }\n}\n","<div class=\"container\">\n  <table>\n    <tr>\n      <td>\n        number of trees\n      </td>\n      <td>\n        <input type=\"number\" step=\"1\"\n          (change)=\"redraw()\"\n          [(ngModel)]=\"numberOfTrees\">\n      </td>\n    </tr>\n\n    <tr>\n      <td>\n        buffer x\n      </td>\n      <td>\n        <input type=\"number\" step=\"1\"\n          (change)=\"redraw()\"\n          [(ngModel)]=\"bufferX\">\n      </td>\n    </tr>\n\n    <tr>\n      <td>\n        buffer y\n      </td>\n      <td>\n        <input type=\"number\" step=\"1\"\n          (change)=\"redraw()\"\n          [(ngModel)]=\"bufferY\">\n      </td>\n    </tr>\n\n    <tr>\n      <td>\n        square grid size\n      </td>\n      <td>\n        <input type=\"number\" step=\"1\"\n          (change)=\"redraw()\"\n          [(ngModel)]=\"gridSizeSquares\">\n      </td>\n    </tr>\n\n    <tr>\n      <td>\n      </td>\n      <td>\n        <button (click)=\"redraw()\">recalculate</button>\n      </td>\n    </tr>\n\n    <tr>\n      <pre>{{ message }}</pre>\n    </tr>\n  </table>\n\n  <canvas #canvas width=\"500\" height=\"500\"></canvas>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","interface Coordinate {\n  x: number;\n  y: number;\n}\n\n// the space required around every selection\ninterface Buffer {\n  x: number;\n  y: number;\n}\n\nexport interface ReturnData {\n  treeData: number[][];\n  message: string;\n}\n\nconst MAX_ATTEMPTS = 30;\n\nexport function buildTreeData(\n  gridSize: number,\n  buffer: Buffer,\n  numTrees: number,\n  attemptNumber: number = 1,\n): ReturnData {\n\n  let remainingCoordinates: Coordinate[] = [];\n\n  // mark every space as available\n  for (let x=0; x<gridSize; x++) {\n    for (let y=0; y<gridSize; y++) {\n      remainingCoordinates.push(\n        { x, y }\n      );\n    }\n  }\n\n  // attempt to pick desired number of spots\n  // retry a certain number of times if you run out of spaces\n  const pickedCoordinates = [];\n\n  for (let i=0; i<numTrees; i++) {\n    const remainingIndexs = remainingCoordinates.length-1;\n    if (remainingIndexs > 0) {\n      const selectionIndex = randomInt(0, remainingIndexs);\n      const selection = remainingCoordinates[selectionIndex];\n      pickedCoordinates.push(selection);\n\n      remainingCoordinates = excludeCoordinates(selection.x, selection.y, remainingCoordinates, buffer);\n    }\n    else {\n      if (attemptNumber === MAX_ATTEMPTS) {\n        return {\n          treeData: coordinatesToGrid(gridSize, pickedCoordinates),\n          message: `Gave up after ${attemptNumber} attempts!\nOnly placed ${pickedCoordinates.length}!`,\n        }\n      }\n      else {\n        return buildTreeData(gridSize, buffer, numTrees, attemptNumber + 1);\n      }\n    }\n  }\n  \n  return {\n    treeData: coordinatesToGrid(gridSize, pickedCoordinates),\n    message: `succeeded after ${attemptNumber} attempts`,\n  }\n}\n\n// apply rules to exclude remaining coordinates when one is selected \nfunction excludeCoordinates(pickX, pickY, availableCoordinates, buffer: Buffer): Coordinate[] {\n  return availableCoordinates.filter(\n    (coord: Coordinate) => {\n      return !shouldExclude(pickX, pickY, coord, buffer);\n    }\n  );\n}\n\n// apply exclusion rules\nfunction shouldExclude(pickX: number, pickY: number, coord: Coordinate, buffer: Buffer) {\n  const startX = pickX - buffer.x;\n  const startY = pickY - buffer.y;\n  const endX = pickX + buffer.x;\n  const endY = pickY + buffer.y;\n\n  for (let x=startX; x<=endX; x++) {\n    for (let y=startY; y<=endY; y++) {\n      if (coord.x === x && coord.y === y) { return true; }\n    }\n  }\n  return false;\n}\n\nfunction coordinatesToGrid(gridSize: number, coordinates: Coordinate[]): number[][] {\n  const treeData = [];\n\n  for (let x=0; x<gridSize; x++) {\n    treeData.push([]);\n  }\n\n  for (const coord of coordinates) {\n    treeData[coord.x][coord.y] = 1;\n  }\n\n  return treeData;\n}\n\nfunction randomInt(min, max){\n return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}