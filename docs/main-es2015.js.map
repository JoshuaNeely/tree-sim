{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/build-tree-data.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {\n  Component,\n  ViewChild,\n  ElementRef,\n  OnInit,\n} from '@angular/core';\n\nimport { buildTreeData, ReturnData } from './build-tree-data';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  numberOfTrees: number = 10;\n  bufferX: number = 2;\n  bufferY: number = 2;\n  gridSizeSquares: number = 16;\n\n  canvasWidth: number;\n  canvasHeight: number;\n\n  // feedback to the user on the algorithm\n  message: string;\n\n  private ctx: CanvasRenderingContext2D;\n\n  @ViewChild('canvas', { static: true })\n  canvas: ElementRef<HTMLCanvasElement>;  \n  \n\n  ngOnInit(): void {\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    this.ctx.fillStyle = 'black';\n\n    this.canvasWidth = this.ctx.canvas.width;\n    this.canvasHeight= this.ctx.canvas.width;\n\n    this.redraw();\n  }\n\n  redraw(): void {\n    this.clearCanvas();\n    const returnData = this.buildTreeData();\n    this.drawSquares(returnData.treeData);\n    this.message = returnData.message;\n  }\n\n  private buildTreeData(): ReturnData {\n    return buildTreeData(this.gridSizeSquares, {x: this.bufferX, y: this.bufferY}, this.numberOfTrees);\n  }\n\n  private clearCanvas(): void {\n    this.ctx.clearRect(0,0, this.canvasWidth, this.canvasHeight);\n  }\n\n  private drawSquare(x: number, y: number, width: number, height: number, filled: boolean) {\n    if (filled) {\n      this.ctx.fillRect(x, y, width, height);\n    } else {\n      this.ctx.strokeRect(x, y, width, height);\n    }\n  }\n\n  private drawSquares(squareData: number[][]) {\n    const squareWidth= this.canvasWidth / this.gridSizeSquares;\n    const squareHeight = this.canvasWidth / this.gridSizeSquares;\n\n    for (let x=0; x<this.gridSizeSquares; x++) {\n      for (let y=0; y<this.gridSizeSquares; y++) {\n        const isFilled: boolean = squareData[x][y] === 1;\n        \n        this.drawSquare(\n          x*squareWidth,\n          y*squareHeight,\n          squareWidth,\n          squareHeight,\n          isFilled,\n        );\n      }\n    }\n  }\n}\n","<div class=\"container\">\n  <table>\n    <tr>\n      <td>\n        number of trees\n      </td>\n      <td>\n        <input type=\"number\" step=\"1\"\n          (change)=\"redraw()\"\n          [(ngModel)]=\"numberOfTrees\">\n      </td>\n    </tr>\n\n    <tr>\n      <td>\n        buffer x\n      </td>\n      <td>\n        <input type=\"number\" step=\"1\"\n          (change)=\"redraw()\"\n          [(ngModel)]=\"bufferX\">\n      </td>\n    </tr>\n\n    <tr>\n      <td>\n        buffer y\n      </td>\n      <td>\n        <input type=\"number\" step=\"1\"\n          (change)=\"redraw()\"\n          [(ngModel)]=\"bufferY\">\n      </td>\n    </tr>\n\n    <tr>\n      <td>\n        square grid size\n      </td>\n      <td>\n        <input type=\"number\" step=\"1\"\n          (change)=\"redraw()\"\n          [(ngModel)]=\"gridSizeSquares\">\n      </td>\n    </tr>\n\n    <tr>\n      <td>\n      </td>\n      <td>\n        <button (click)=\"redraw()\">recalculate</button>\n      </td>\n    </tr>\n\n    <tr>\n      <pre>{{ message }}</pre>\n    </tr>\n  </table>\n\n  <canvas #canvas width=\"500\" height=\"500\"></canvas>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","interface Coordinate {\n  x: number;\n  y: number;\n}\n\n// the space required around every selection\ninterface Buffer {\n  x: number;\n  y: number;\n}\n\nexport interface ReturnData {\n  treeData: number[][];\n  message: string;\n}\n\nconst MAX_ATTEMPTS = 30;\n\nexport function buildTreeData(\n  gridSize: number,\n  buffer: Buffer,\n  numTrees: number,\n  attemptNumber: number = 1,\n): ReturnData {\n\n  let remainingCoordinates: Coordinate[] = [];\n\n  // mark every space as available\n  for (let x=0; x<gridSize; x++) {\n    for (let y=0; y<gridSize; y++) {\n      remainingCoordinates.push(\n        { x, y }\n      );\n    }\n  }\n\n  // attempt to pick desired number of spots\n  // retry a certain number of times if you run out of spaces\n  const pickedCoordinates = [];\n\n  for (let i=0; i<numTrees; i++) {\n    const remainingIndexs = remainingCoordinates.length-1;\n    if (remainingIndexs > 0) {\n      const selectionIndex = randomInt(0, remainingIndexs);\n      const selection = remainingCoordinates[selectionIndex];\n      pickedCoordinates.push(selection);\n\n      remainingCoordinates = excludeCoordinates(selection.x, selection.y, remainingCoordinates, buffer);\n    }\n    else {\n      if (attemptNumber === MAX_ATTEMPTS) {\n        return {\n          treeData: coordinatesToGrid(gridSize, pickedCoordinates),\n          message: `Gave up after ${attemptNumber} attempts!\nOnly placed ${pickedCoordinates.length}!`,\n        }\n      }\n      else {\n        return buildTreeData(gridSize, buffer, numTrees, attemptNumber + 1);\n      }\n    }\n  }\n  \n  return {\n    treeData: coordinatesToGrid(gridSize, pickedCoordinates),\n    message: `succeeded after ${attemptNumber} attempts`,\n  }\n}\n\n// apply rules to exclude remaining coordinates when one is selected \nfunction excludeCoordinates(pickX, pickY, availableCoordinates, buffer: Buffer): Coordinate[] {\n  return availableCoordinates.filter(\n    (coord: Coordinate) => {\n      return !shouldExclude(pickX, pickY, coord, buffer);\n    }\n  );\n}\n\n// apply exclusion rules\nfunction shouldExclude(pickX: number, pickY: number, coord: Coordinate, buffer: Buffer) {\n  const startX = pickX - buffer.x;\n  const startY = pickY - buffer.y;\n  const endX = pickX + buffer.x;\n  const endY = pickY + buffer.y;\n\n  for (let x=startX; x<=endX; x++) {\n    for (let y=startY; y<=endY; y++) {\n      if (coord.x === x && coord.y === y) { return true; }\n    }\n  }\n  return false;\n}\n\nfunction coordinatesToGrid(gridSize: number, coordinates: Coordinate[]): number[][] {\n  const treeData = [];\n\n  for (let x=0; x<gridSize; x++) {\n    treeData.push([]);\n  }\n\n  for (const coord of coordinates) {\n    treeData[coord.x][coord.y] = 1;\n  }\n\n  return treeData;\n}\n\nfunction randomInt(min, max){\n return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}